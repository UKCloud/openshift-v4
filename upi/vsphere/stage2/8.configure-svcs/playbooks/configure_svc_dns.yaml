---
- hosts: svcs, asvcs, csvcs, esvcs
  tasks:
  - name: Make the /etc/coredns directory
    file:
      path: /etc/coredns
      state: directory

  - name: Make the Zonefile
    template:
      src: templates/zonefile.j2
      dest: /etc/coredns/{{ domain_suffix }}.zone
   
  - name: Make a Unit file for coredns.service
    template:
      src: templates/coredns.service.j2
      dest: /etc/systemd/system/coredns.service

  - name: Login to registry to pull image
    raw: podman login --tls-verify=false  -u "{{ registry_username }}" -p "{{ registry_token }}" https://{{ registry_url }}
    when: registry_username != ""

  - name: Pull CoreDNS container
    raw: podman pull --tls-verify=false {{ registry_url }}/coredns:{{ image_tag }}
      
- hosts: svcs
  vars:
    dns_server1: "{{ man_dns_server1 }}"
    dns_server2: "{{ man_dns_server2 }}"
  tasks:
  - name: Make a Corefile on the svcs VMs (only if it doesn't exist)
    template:
      src: templates/Corefile.j2
      dest: /etc/coredns/Corefile
      force: no
      
- hosts: asvcs
  vars:
    dns_server1: "{{ assured_dns_server1 }}"
    dns_server2: "{{ assured_dns_server2 }}"
  tasks:
  - name: Make a Corefile on the asvcs VMs (only if it doesn't exist)
    template:
      src: templates/Corefile.j2
      dest: /etc/coredns/Corefile
      force: no      
  
- hosts: csvcs
  vars: 
    dns_server1: "{{ combined_dns_server1 }}"
    dns_server2: "{{ combined_dns_server2 }}"
  tasks:
  - name: Make a Corefile on the csvcs VMs (only if it doesn't exist)
    template:
      src: templates/Corefile.j2
      dest: /etc/coredns/Corefile
      force: no  

- hosts: esvcs
  vars:
    dns_server1: "{{ elevated_dns_server1 }}"
    dns_server2: "{{ elevated_dns_server2 }}"
  tasks:
  - name: Make a Corefile on the esvcs VMs (only if it doesn't exist)
    template:
      src: templates/Corefile.j2
      dest: /etc/coredns/Corefile
      force: no  

- hosts: svcs, asvcs, csvcs, esvcs
  tasks:
  - name: Enable port 53 inbound in firewalld (TCP)
    firewalld:
      port: 53/tcp
      zone: public
      permanent: yes
      immediate: yes
      state: enabled

  - name: Enable port 53 inbound in firewalld (UDP)
    firewalld:
      port: 53/udp
      zone: public
      permanent: yes
      immediate: yes
      state: enabled

- hosts: svcs, asvcs, csvcs, esvcs
  any_errors_fatal: true
  strategy: linear
  serial: 1
  tasks:
  - name: Enable (and restart) coredns.service
    systemd:
      name: coredns
      state: restarted
      enabled: yes
      daemon_reload: yes

  - name: Pause 1 second
    pause:
      seconds: 1

  - name: Test by doing lookup of api-int
    command: nslookup -timeout=1 api-int.{{ domain_suffix }} {{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}
    delegate_to: 127.0.0.1
    retries: 3
    delay: 1
    register: result
    until: result.rc == 0
