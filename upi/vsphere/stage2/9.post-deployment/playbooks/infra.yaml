---
- hosts: localhost 
  tasks:
  - name: Create default nodeSelector to target workers
    k8s:
      state: present
      definition:
        apiVersion: config.openshift.io/v1
        kind: Scheduler
        metadata:
          name: cluster
        spec:
          defaultNodeSelector: node-role.kubernetes.io/worker=
          mastersSchedulable: false
        policy:
          name: ""

  - name: Get nodes
    k8s_facts:
      kind: Node
    register: nodes

  - name: Build nodeLabelRaw dicts
    set_fact:
      infraNodes: '{{ infraNodes | default([]) + [ nodes | to_json | from_json | json_query(infraNodesQuery) ] }}'
    vars:
      infraNodesQuery: "resources[?contains(metadata.name,'infra-')].metadata.name"

  - name: Add infra node-role and remove worker node-role from infra nodes
    k8s:
      state: present
      definition:
        apiVersion: v1
        kind: Node
        metadata:
          name: "{{ item }}"
          labels:
            node-role.kubernetes.io/infra: ""
            node-role.kubernetes.io/worker:
    with_items: "{{ infraNodes }}"

  - name: Schedule default ingresscontroller pods to infra nodes
    k8s:
      state: present
      definition:
        apiVersion: operator.openshift.io/v1
        kind: IngressController
        metadata:
          name: default
          namespace: openshift-ingress-operator
        spec:
          nodePlacement:
            nodeSelector:
              matchLabels:
                node-role.kubernetes.io/infra: ""

  - name: Schedule registry to infra nodes
    k8s:
      state: present
      definition:
        apiVersion: imageregistry.operator.openshift.io/v1
        kind: Config
        metadata:
          name: cluster
        spec:
          nodeSelector:
            node-role.kubernetes.io/infra: ""

  - name: Create cluster-monitoring configmap
    k8s:
      state: present
      definition:
        apiVersion: v1
        kind: ConfigMap
        metadata:
          name: cluster-monitoring-config
          namespace: openshift-monitoring
        data:
          config.yaml: |+
            alertmanagerMain:
              nodeSelector:
                node-role.kubernetes.io/infra: ""
            prometheusK8s:
              nodeSelector:
                node-role.kubernetes.io/infra: ""
            prometheusOperator:
              nodeSelector:
                node-role.kubernetes.io/infra: ""
            grafana:
              nodeSelector:
                node-role.kubernetes.io/infra: ""
            k8sPrometheusAdapter:
              nodeSelector:
                node-role.kubernetes.io/infra: ""
            kubeStateMetrics:
              nodeSelector:
                node-role.kubernetes.io/infra: ""
            telemeterClient:
              nodeSelector:
                node-role.kubernetes.io/infra: ""
            openshiftStateMetrics:
              nodeSelector:
                node-role.kubernetes.io/infra: ""


  - name: Create MachineConfig
    k8s:
      state: present
      definition:
        apiVersion: machineconfiguration.openshift.io/v1
        kind: MachineConfig
        metadata:
          labels:
            machineconfiguration.openshift.io/role: infra
          name: 02-infra-kubelet
        spec:
          config:
            ignition:
              version: 2.2.0
            systemd:
              units:
              - dropins:
                - name: 20-infra-nodelabel.conf
                  contents: |
                    [Service]
                    ExecStart=
                    ExecStart=/usr/bin/hyperkube \
                        kubelet \
                          --config=/etc/kubernetes/kubelet.conf \
                          --bootstrap-kubeconfig=/etc/kubernetes/kubeconfig \
                          --kubeconfig=/var/lib/kubelet/kubeconfig \
                          --container-runtime=remote \
                          --container-runtime-endpoint=/var/run/crio/crio.sock \
                          --runtime-cgroups=/system.slice/crio.service \
                          --node-labels=node-role.kubernetes.io/infra,node.openshift.io/os_id=${ID} \
                          --minimum-container-ttl-duration=6m0s \
                          --volume-plugin-dir=/etc/kubernetes/kubelet-plugins/volume/exec \
                          --cloud-provider=vsphere \
                          --v=${KUBELET_LOG_LEVEL}	
                enabled: true
                name: kubelet.service

  - name: Create MachineConfigPool
    k8s:
      state: present
      definition:
        apiVersion: machineconfiguration.openshift.io/v1
        kind: MachineConfigPool
        metadata:
          name: infra
        spec:
          machineConfigSelector:
            matchExpressions:
              - { key: machineconfiguration.openshift.io/role, operator: In, values: [ worker, infra ] }
          nodeSelector:
            matchLabels:
              node-role.kubernetes.io/infra: ""
