- hosts: localhost

  tasks:
  - name: Retrieve OpenShift version
    k8s_facts:
      kind: ClusterVersion
    register: clusterVersion
  
  - name: Extract channel
    set_fact:
      openshiftChannel: "{{ clusterVersion | to_json | from_json | json_query(openshiftChannelQuery) }}"
    vars:
      openshiftChannelQuery: "resources[0].spec.channel"
  
  - name: Extract version from channel
    set_fact:
      openshiftVersion: "{{ openshiftChannel.split('-')[1] }}"

  - name: Create operator Namespace
    k8s:
     state: present
     definition:
       apiVersion: v1
       kind: Namespace
       metadata:
         name: openshift-operators-redhat
         annotations:
           openshift.io/node-selector: ""
         labels:
           openshift.io/cluster-monitoring: "true"

  - name: Create OperatorGroup
    k8s:
     state: present
     definition:
       apiVersion: operators.coreos.com/v1
       kind: OperatorGroup
       metadata:
         name: openshift-operators-redhat
         namespace: openshift-operators-redhat
       spec: {}

  - name: Create elasticsearch-operator Subscription
    k8s:
     state: present
     definition:
       apiVersion: operators.coreos.com/v1alpha1
       kind: Subscription
       metadata:
         name: "elasticsearch-operator"
         namespace: "openshift-operators-redhat"
       spec:
         channel: "{{ openshiftVersion }}"
         installPlanApproval: "Automatic"
         source: "redhat-operators"
         sourceNamespace: "openshift-marketplace"
         name: "elasticsearch-operator"

  - name: Create prometheus Role
    k8s:
      state: present
      definition:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: Role
        metadata:
          name: prometheus-k8s
          namespace: openshift-operators-redhat
        rules:
        - apiGroups:
          - ""
          resources:
          - services
          - endpoints
          - pods
          verbs:
          - get
          - list
          - watch

  - name: Create prometheus RoleBinding
    k8s:
      state: present
      definition:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: RoleBinding
        metadata:
          name: prometheus-k8s
          namespace: openshift-operators-redhat
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: Role
          name: prometheus-k8s
        subjects:
        - kind: ServiceAccount
          name: prometheus-k8s
          namespace: openshift-operators-redhat

  - name: Create openshift-logging namespace
    k8s:
     state: present
     definition:
       apiVersion: v1
       kind: Namespace
       metadata:
         name: openshift-logging
         annotations:
           openshift.io/node-selector: ""
         labels:
           openshift.io/cluster-logging: "true"
           openshift.io/cluster-monitoring: "true"

  - name: Create cluster-logging operator group
    k8s:
      state: present
      definition:
        apiVersion: operators.coreos.com/v1
        kind: OperatorGroup
        metadata:
          name: cluster-logging
          namespace: openshift-logging
        spec:
          targetNamespaces:
          - openshift-logging

  - name: Create subscription for cluster-logging
    k8s:
      state: present
      definition:
        apiVersion: operators.coreos.com/v1alpha1
        kind: Subscription
        metadata:
          name: cluster-logging
          namespace: openshift-logging
        spec:
          channel: "{{ openshiftVersion }}"
          name: cluster-logging
          source: redhat-operators
          sourceNamespace: openshift-marketplace

  - name: Wait for operator pod to be Ready
    k8s_facts:
      kind: Pod
      namespace: openshift-logging
      label_selectors:
        - name = cluster-logging-operator 
    register: operatorPodStatus
    until:
      - operatorPodStatus.resources | length > 0
      - operatorPodStatus.resources[0].status.phase == "Running"
    retries: 20
    delay: 3

  - name: Create ClusterLogging object
    k8s:
      state: present
      definition:
        apiVersion: "logging.openshift.io/v1"
        kind: "ClusterLogging"
        metadata:
          name: "instance"
          namespace: "openshift-logging"
        spec:
          collection:
            logs:
              fluentd: {}
              type: fluentd
          curation:
            curator:
              nodeSelector:
                node-role.kubernetes.io/infra: ""
              schedule: 0 1 * * *
            type: curator
          logStore:
            elasticsearch:
              nodeCount: 1
              nodeSelector:
                node-role.kubernetes.io/infra: ""
              redundancyPolicy: ZeroRedundancy
              resources:
                limits:
                  cpu: 4000m
                  memory: 6Gi
                requests:
                  cpu: 100m
                  memory: 512Mi
                storage:
                  size: 100G
                  storageClassName: thin
            type: elasticsearch
          managementState: Managed
          visualization:
            kibana:
              nodeSelector:
                node-role.kubernetes.io/infra: ""
              replicas: 1
            type: kibana
