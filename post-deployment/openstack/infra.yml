- hosts: localhost

  tasks:
  - name: Get nodes
    k8s_facts:
      kind: Node
    register: nodes

  - name: Build nodeLabelRaw dicts
    set_fact:
      infraNodes: '{{ infraNodes | default([]) + [ nodes | to_json | from_json | json_query(infraNodesQuery) ] }}'
    vars:
      infraNodesQuery: "resources[?contains(metadata.name,'{{ nonce? }}-infra-')].metadata.name"

  - name: Add infra node-role and remove worker node-role from infra nodes
    k8s:
      state: present
      definition:
        apiVersion: v1
        kind: Node
        metadata:
          name: "{{ item }}"
          labels:
            node-role.kubernetes.io/infra: ""
            node-role.kubernetes.io/worker:
    with_items: "{{ infraNodes }}"

  - name: Schedule default ingresscontroller pods to infra nodes
    k8s:
      state: present
      definition:
        apiVersion: operator.openshift.io/v1
        kind: IngressController
        metadata:
          name: default
          namespace: openshift-ingress-operator
        spec:
          nodePlacement:
            nodeSelector:
              matchLabels:
                node-role.kubernetes.io/infra: ""

  - name: Schedule registry to infra nodes
    k8s:
      state: present
      definition:
        apiVersion: imageregistry.operator.openshift.io/v1
        kind: Config
        metadata:
          name: cluster
        spec:
          nodeSelector:
            node-role.kubernetes.io/infra: ""

  - name: Create cluster-monitoring configmap
    k8s:
      state: present
      definition:
        apiVersion: v1
        kind: ConfigMap
        metadata:
          name: cluster-monitoring-config
          namespace: openshift-monitoring
        data:
          config.yaml: |+
            alertmanagerMain:
              nodeSelector:
                node-role.kubernetes.io/infra: ""
            prometheusK8s:
              nodeSelector:
                node-role.kubernetes.io/infra: ""
            prometheusOperator:
              nodeSelector:
                node-role.kubernetes.io/infra: ""
            grafana:
              nodeSelector:
                node-role.kubernetes.io/infra: ""
            k8sPrometheusAdapter:
              nodeSelector:
                node-role.kubernetes.io/infra: ""
            kubeStateMetrics:
              nodeSelector:
                node-role.kubernetes.io/infra: ""
            telemeterClient:
              nodeSelector:
                node-role.kubernetes.io/infra: ""
            openshiftStateMetrics:
              nodeSelector:
                node-role.kubernetes.io/infra: ""

  - name: Create scheduler policy configmap
    k8s:
      state: present
      definition:  
        apiVersion: v1
        kind: ConfigMap
        metadata:
          name: scheduler-policy
          namespace: openshift-config
        data:
          policy.cfg: |
            {
                "kind" : "Policy",
                "apiVersion" : "v1",
                "predicates" : [
                        {"name" : "NoDiskConflict"},
                        {"name" : "MaxEBSVolumeCount"},
                        {"name" : "MaxAzureDiskVolumeCount"},
                        {"name" : "MaxGCEPDVolumeCount"},
                        {"name" : "MatchInterPodAffinity"},
                        {"name" : "PodToleratesNodeTaints"},
                        {"name" : "CheckNodeUnschedulable"},
                        {"name" : "CheckVolumeBinding"},
                        {"name" : "GeneralPredicates"},
                        {"name" : "MaxCSIVolumeCountPred"}
                        ],
                "priorities" : [
                        {"name" : "BalancedResourceAllocation", "weight" : 1},
                        {"name" : "ImageLocalityPriority", "weight" : 1},
                        {"name" : "InterPodAffinityPriority", "weight" : 1},
                        {"name" : "LeastRequestedPriority", "weight" : 1},
                        {"name" : "NodeAffinityPriority", "weight" : 1},
                        {"name" : "NodePreferAvoidPodsPriority", "weight" : 1},
                        {"name" : "SelectorSpreadPriority", "weight" : 1},
                        {"name" : "TaintTolerationPriority", "weight" : 1}
                        ]
              }

  - name: Create default nodeSelector to target workers and amend scheduler policy to mitigate volume zone issue
    k8s:
      state: present
      definition:
        apiVersion: config.openshift.io/v1
        kind: Scheduler
        metadata:
          name: cluster
        spec:
          defaultNodeSelector: node-role.kubernetes.io/worker=
          mastersSchedulable: false
        policy:
          name: "scheduler-policy"
