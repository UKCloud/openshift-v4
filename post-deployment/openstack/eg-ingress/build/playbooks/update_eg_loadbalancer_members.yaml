---
- hosts: localhost
  connection: local
  gather_facts: no

  tasks:
  - name: 'Retrieve OpenStack secret'
    community.kubernetes.k8s_info:
      kind: Secret
      name: openstack-credentials
      namespace: kube-system
    register: openstackCredentialRaw

  - name: 'Extract OpenStack credential'
    ansible.builtin.set_fact:
      openstackCredential: "{{ openstackCredentialRaw | to_json | from_json | json_query(openstackCredentialQuery) }}"
    vars:
      openstackCredentialQuery: 'resources[0].data."clouds.yaml"'

  - name: 'Write OpenStack credential to file'
    ansible.builtin.copy:
      dest: /etc/openstack/clouds.yaml
      content: "{{ openstackCredential | b64decode }}"

  - name: 'Get infra nodes'
    community.kubernetes.k8s_info:
      kind: Node
      label_selectors:
        - node-role.kubernetes.io/infra =
    register: infraNodes

  - name: 'Extract infra node IPs'
    ansible.builtin.set_fact:
      infraMembersRaw: "{{ infraNodes | to_json | from_json | json_query(infraMembersRawQuery) }}"
    vars:
      infraMembersRawQuery: "resources[*].status.addresses[?type=='InternalIP'].address"

  - name: 'Build infra node IP dict'
    ansible.builtin.set_fact:
      infraMembers: "{{ infraMembers | default([]) + [ item ] }}"
    with_items: "{{ infraMembersRaw }}"

  - name: 'Get loadbalancer pools'
    ansible.builtin.shell: openstack loadbalancer pool list -c name -f value | grep -eg-
    register: loadbalancerPoolsRaw

  - name: 'Sanitise loadbalancer pools'
    ansible.builtin.set_fact:
      loadbalancerPools: "{{ loadbalancerPoolsRaw.stdout_lines }}"

  - name: 'Get loadbalancer pool members'
    ansible.builtin.command: openstack loadbalancer member list "{{ loadbalancerPools | first }}" -c address -f value
    register: loadbalancerMembersRaw

  - name: 'Sanitise loadbalancer pool members'
    ansible.builtin.set_fact:
      loadbalancerMembers: "{{ loadbalancerMembersRaw.stdout_lines }}"

  - name: 'Determine members to be added'
    ansible.builtin.set_fact:
      loadbalancerMembersToAdd: "{{ loadbalancerMembersToAdd | default([]) + [ item ] }}"
    with_items: "{{ infraMembers }}"
    when: 
      - infraMembers is defined
      - item not in loadbalancerMembers

  - name: 'Determine members to be deleted'
    ansible.builtin.set_fact:
      loadbalancerMembersToDelete: "{{ loadbalancerMembersToDelete | default([]) + [ item ] }}"
    with_items: "{{ loadbalancerMembers }}"
    when: 
      - infraMembers is defined
      - item not in infraMembers

  - name: 'Add loadbalancer members'
    openstack.cloud.lb_member:
      name: "{{ item[1] }}"
      address: "{{ item[1] }}"
      pool: "{{ item[0] }}"
      protocol_port: "{{ 30443 if '-HTTPS-' in item[0] else 30080 }}"
      state: present
    with_nested:
      - "{{ loadbalancerPools }}"
      - "{{ loadbalancerMembersToAdd }}"
    when: loadbalancerMembersToAdd is defined

  - name: 'Delete loadbalancer members'
    openstack.cloud.lb_member:
      name: "{{ item[1] }}"
      pool: "{{ item[0] }}"
      state: absent
    with_nested:
      - "{{ loadbalancerPools }}"
      - "{{ loadbalancerMembersToDelete }}"
    when: loadbalancerMembersToDelete is defined
